[{"/Users/shermam/Projects/secure-router/.eslintrc.js":"1","/Users/shermam/Projects/secure-router/babel.config.js":"2","/Users/shermam/Projects/secure-router/src/index.test.ts":"3","/Users/shermam/Projects/secure-router/src/index.ts":"4","/Users/shermam/Projects/secure-router/src/types/router.d.ts":"5"},{"size":247,"mtime":1682595821046,"results":"6","hashOfConfig":"7"},{"size":237,"mtime":1682596200034,"results":"8","hashOfConfig":"7"},{"size":22819,"mtime":1685371979664,"results":"9","hashOfConfig":"7"},{"size":12100,"mtime":1685371836575,"results":"10","hashOfConfig":"7"},{"size":2707,"mtime":1685370924463,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vdhuna",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shermam/Projects/secure-router/.eslintrc.js",[],[],"/Users/shermam/Projects/secure-router/babel.config.js",[],[],"/Users/shermam/Projects/secure-router/src/index.test.ts",["27","28","29"],[],"/Users/shermam/Projects/secure-router/src/index.ts",["30","31"],["32","33","34","35"],"/Users/shermam/Projects/secure-router/src/types/router.d.ts",[],["36","37","38"],{"ruleId":"39","severity":2,"message":"40","line":626,"column":79,"nodeType":"41","messageId":"42","endLine":626,"endColumn":98},{"ruleId":"39","severity":2,"message":"40","line":634,"column":98,"nodeType":"41","messageId":"42","endLine":634,"endColumn":120},{"ruleId":"43","severity":2,"message":"44","line":667,"column":7,"nodeType":"45","messageId":"46","endLine":667,"endColumn":19,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":93,"column":62,"nodeType":"50","messageId":"51","endLine":93,"endColumn":65,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":265,"column":83,"nodeType":"50","messageId":"51","endLine":265,"endColumn":86,"suggestions":"53"},{"ruleId":"54","severity":2,"message":"55","line":48,"column":10,"nodeType":"45","messageId":"56","endLine":48,"endColumn":14,"suppressions":"57"},{"ruleId":"54","severity":2,"message":"58","line":49,"column":10,"nodeType":"45","messageId":"56","endLine":49,"endColumn":19,"suppressions":"59"},{"ruleId":"54","severity":2,"message":"60","line":50,"column":10,"nodeType":"45","messageId":"56","endLine":50,"endColumn":22,"suppressions":"61"},{"ruleId":"54","severity":2,"message":"62","line":233,"column":3,"nodeType":"45","messageId":"56","endLine":233,"endColumn":17,"suppressions":"63"},{"ruleId":"54","severity":2,"message":"64","line":54,"column":7,"nodeType":"45","messageId":"56","endLine":54,"endColumn":21,"suppressions":"65"},{"ruleId":"54","severity":2,"message":"66","line":77,"column":7,"nodeType":"45","messageId":"56","endLine":77,"endColumn":12,"suppressions":"67"},{"ruleId":"54","severity":2,"message":"68","line":84,"column":9,"nodeType":"45","messageId":"56","endLine":84,"endColumn":27,"suppressions":"69"},"@typescript-eslint/restrict-template-expressions","Invalid type \"any\" of template literal expression.","MemberExpression","invalidType","@typescript-eslint/strict-boolean-expressions","Unexpected any value in conditional. An explicit comparison or type cast is required.","Identifier","conditionErrorAny",["70"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["71","72"],["73","74"],"@typescript-eslint/naming-convention","Class Property name `DENY` must match one of the following formats: camelCase","doesNotMatchFormat",["75"],"Class Property name `AUTHORIZE` must match one of the following formats: camelCase",["76"],"Class Property name `AUTHENTICATE` must match one of the following formats: camelCase",["77"],"Class Method name `process_params` must match one of the following formats: camelCase",["78"],"Type Method name `process_params` must match one of the following formats: camelCase",["79"],"Type Property name `Route` must match one of the following formats: camelCase",["80"],"Variable name `Router` must match one of the following formats: camelCase, UPPER_CASE",["81"],{"messageId":"82","fix":"83","desc":"84"},{"messageId":"85","fix":"86","desc":"87"},{"messageId":"88","fix":"89","desc":"90"},{"messageId":"85","fix":"91","desc":"87"},{"messageId":"88","fix":"92","desc":"90"},{"kind":"93","justification":"94"},{"kind":"93","justification":"94"},{"kind":"93","justification":"94"},{"kind":"93","justification":"94"},{"kind":"93","justification":"94"},{"kind":"93","justification":"94"},{"kind":"93","justification":"94"},"conditionFixCastBoolean",{"range":"95","text":"96"},"Explicitly cast value to a boolean (`Boolean(value)`)","suggestUnknown",{"range":"97","text":"98"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"97","text":"99"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"100","text":"98"},{"range":"100","text":"99"},"directive","",[22676,22688],"Boolean(sharedServer)",[3027,3030],"unknown","never",[9006,9009]]